import Step1ReusableComponent from '../Sections/Step1ReusableComponent'
import Step2StateSharing from '../Sections/Step2StateSharing'
import Step3LifecycleMethods from '../Sections/Step3LifecycleMethods'
import Step4SimpleJSX from '../Sections/Step4SimpleJSX'
import Step5Accordion from '../Sections/Step5Accordion'
import Step6ContactForm from '../Sections/Step6ContactForm'


export const steps = [
    {
        title: 'Reusable React Components',
        code: "import Toast from \"../Components/Toast\";\nimport Button from \"../Components/Button\";\n\nconst ButtonWithToast = ({ label, toastMessage, toastEmoji }) => {\n  const handleClick = () => {\n    Toast(toastMessage, toastEmoji);\n  };\n\n  return (\n    <Button label={label} onClick={handleClick} />\n  );\n};\n\nconst Step1ReusableComponent = () => (\n  <>\n       <ButtonWithToast\n        label=\"Greet\"\n        toastMessage=\"Hello there!\"\n        toastEmoji=\"👋\"\n      />\n      <ButtonWithToast\n        label=\"Celebrate\"\n        toastMessage=\"Congratulations!\"\n        toastEmoji=\"🎉\"\n      />\n      <ButtonWithToast\n        label=\"Warning\"\n        toastMessage=\"Be careful!\"\n        toastEmoji=\"⚠️\"\n      />\n    </div>\n  </>\n);\n\nexport default Step1ReusableComponent;",
        component: <Step1ReusableComponent />,
    },
    {
        title: 'Sharing State Between Components',
        code: "import React, { useState } from 'react';\nimport Button from '../Components/Button';\n\nconst Child = ({ count, increment }) => (\n  <div>\n    <p className=\"text-gray-800 mb-2\">Count: {count}</p>\n    <Button onClick={increment} label={'Increment'} />\n  </div>\n);\n\nconst StateSharing = () => {\n  const [count, setCount] = useState(0);\n  return (\n    <Child count={count} increment={() => setCount(count + 1)} />\n  );\n};\n\nexport default StateSharing;"
,
        component: <Step2StateSharing />,
    },
    {
        title: 'Lifecycle Methods in React',
        code: "// components/LifecycleMethods.jsx\nimport React, { useEffect, useState } from 'react';\nimport Button from '../Components/Button';\nimport Toast from '../Components/Toast';\n\nconst LifecycleMethods = () => {\n  const [count, setCount] = useState(0);\n\n  useEffect(() => {\n    const now = new Date();\n    const formattedTime = now.toLocaleTimeString('en-US', {\n      hour12: false,\n      second: '2-digit'\n    }) + '.' + now.getMilliseconds().toString().padStart(3, '0');\n\n    Toast(`Component mounted or updated at ${formattedTime}`, '🔔');\n\n    return () => {\n      Toast(`Component will unmount at ${formattedTime}`, '🔔');\n    };\n  }, [count]);\n\n  return (\n      <p className=\"text-gray-800 mb-2\">Count: {count}</p>\n      <Button onClick={() => setCount(count + 1)} label={'Increment'} />\n    </div>\n  );\n};\n\nexport default LifecycleMethods;",
        component: <Step3LifecycleMethods />,
    },
    {
        title: 'Simple JSX Component',
        code: "import React, { useState } from 'react';\nimport Toast from '../Components/Toast';\nimport Button from '../Components/Button';\n\nconst Greeting = ({ name }) => {\n  const handleClick = () => {\n    Toast(`Hello, ${name}!`, '👋', 'top-center');\n  };\n  return (\n    <h3 onClick={handleClick} className=\"text-lg text-blue-600 cursor-pointer\">\n      Welcome, {name}!\n    </h3>\n  );\n};\n\nconst SkillsList = ({ skills }) => (\n  <>\n    <h2 className=\"text-xl font-semibold mt-4 mb-2\">Skill List</h2>\n    <ul className=\"list-disc list-inside mb-4\">\n      {skills.map((skill, index) => (\n        <li key={index} className=\"text-gray-700\">\n          {skill}\n        </li>\n      ))}\n    </ul>\n  </>\n);\n\nconst SimpleJSX = () => {\n  const [name, setName] = useState('React Developer');\n  const [showSkills, setShowSkills] = useState(true);\n  const [skills, setSkills] = useState(['JSX', 'Hooks', 'State Management']);\n  const [newSkill, setNewSkill] = useState('');\n\n  const handleAddSkill = (e) => {\n    e.preventDefault();\n    const trimmedSkill = newSkill.trim();\n    if (trimmedSkill && !skills.includes(trimmedSkill)) {\n      setSkills((prevSkills) => [...prevSkills, trimmedSkill]);\n      setNewSkill('');\n    }\n  };\n\n  const toggleSkills = () => setShowSkills((prev) => !prev);\n\n  return (\n    <div>\n      <Greeting name={name} />\n      <div className=\"my-4\">\n        <input\n          type=\"text\"\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n          className=\"border border-gray-300 rounded px-3 py-1 w-full\"\n          placeholder=\"Enter your name\"\n        />\n      </div>\n      <form onSubmit={handleAddSkill} className=\"flex items-center space-x-2 mb-10\">\n        <input\n          type=\"text\"\n          value={newSkill}\n          onChange={(e) => setNewSkill(e.target.value)}\n          className=\"flex-1 border border-gray-300 rounded px-3 py-2\"\n          placeholder=\"Enter new skill\"\n        />\n        <Button label={'Add Skill'} type=\"submit\" />\n      </form>\n      <button\n        onClick={toggleSkills}\n        className={`px-4 py-2 rounded mb-2 ${\n          showSkills ? 'bg-red-500 hover:bg-red-600' : 'bg-blue-500 hover:bg-blue-600'\n        } text-white`}\n      >\n        {showSkills ? 'Hide' : 'Show'} Skills\n      </button>\n      {showSkills && <SkillsList skills={skills} />}\n    </div>\n  );\n};\n\nexport default SimpleJSX;",
        component: <Step4SimpleJSX />,
    },
    {
        title: 'Accordion Component',
       code: "// data/accordionData.js \n export const accordionData = [\n  {\n    title: 'Section 1',\n    content: 'Content for section 1 goes here. This is a brief snippet of information.'\n  },\n  {\n    title: 'Section 2',\n    content: 'Content for section 2 goes here. This is another snippet of information.'\n  },\n  {\n    title: 'Section 3',\n    content: 'Content for section 3 goes here. Yet another snippet of information.'\n  }\n]; \n \n \n //components/AccordionItem.jsx \n const AccordionItem = ({ title, content, isOpen, onClick }) => (\n  <div className=\"border-b border-gray-200\">\n    <button\n      className=\"w-full text-left px-4 py-3 focus:outline-none flex justify-between items-center\"\n      onClick={onClick}\n    >\n      <span className=\"text-lg font-medium\">{title}</span>\n      <span\n        className=\"ml-2 transform transition-transform duration-200\"\n        style={{ transform: isOpen ? 'rotate(90deg)' : 'rotate(0deg)' }}\n      >\n        ▶\n      </span>\n    </button>\n    {isOpen && (\n      <div className=\"px-4 py-2 text-gray-700\">\n        {content}\n      </div>\n    )}\n  </div>\n);\n\nexport default AccordionItem; \n \n \n  // components/Accordion.jsx \n import React, { useState } from 'react';\nimport { accordionData as items } from '../data/accordionData';\nimport AccordionItem from '../Components/AccordionItem';\n\nconst Accordion = () => {\n  const [openIndex, setOpenIndex] = useState(0);\n\n  const handleClick = (index) => {\n    setOpenIndex(prevIndex => (prevIndex === index ? index : index));\n  };\n\n  return (\n    <div className=\"max-w-md mx-auto bg-white shadow-md rounded-md overflow-hidden\">\n      {items.map((item, index) => (\n        <AccordionItem\n          key={index}\n          title={item.title}\n          content={item.content}\n          isOpen={openIndex === index}\n          onClick={() => handleClick(index)}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default Accordion;\n",
        component: <Step5Accordion />,
    },
    {
        title: 'Contact Form Submission',
        code: "import React, { useState } from 'react';\nimport Toast from '../Components/Toast';\nimport Button from '../Components/Button';\n\nconst ContactForm = () => {\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    message: '',\n  });\n  const [submitted, setSubmitted] = useState(false);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData((prevData) => ({\n      ...prevData,\n      [name]: value,\n    }));\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log('Form submitted:', formData);\n    setSubmitted(true);\n  };\n\n  return (\n    <div className=\"bg-white shadow-md rounded-lg p-6 w-full max-w-md mx-auto\">\n      {submitted ? (\n        <p className=\"text-green-600\">\n          Thank you for your feedback!\n        </p>\n      ) : (\n        <form onSubmit={handleSubmit}>\n          <div className=\"mb-4\">\n            <label htmlFor=\"name\" className=\"block text-gray-700 mb-2\">\n              Name:\n            </label>\n            <input\n              type=\"text\"\n              id=\"name\"\n              name=\"name\"\n              value={formData.name}\n              onChange={handleChange}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded\"\n              required\n            />\n          </div>\n          <div className=\"mb-4\">\n            <label htmlFor=\"email\" className=\"block text-gray-700 mb-2\">\n              Email:\n            </label>\n            <input\n              type=\"email\"\n              id=\"email\"\n              name=\"email\"\n              value={formData.email}\n              onChange={handleChange}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded\"\n              required\n            />\n          </div>\n          <div className=\"mb-4\">\n            <label htmlFor=\"message\" className=\"block text-gray-700 mb-2\">\n              Feedback:\n            </label>\n            <textarea\n              id=\"message\"\n              name=\"message\"\n              value={formData.message}\n              onChange={handleChange}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded\"\n              rows=\"4\"\n              required\n            ></textarea>\n          </div>\n\n          <Button label='Submit' type='submit' />\n        </form>\n      )}\n    </div>\n  );\n};\n\nexport default ContactForm;",
        component: <Step6ContactForm />,
    },
];
